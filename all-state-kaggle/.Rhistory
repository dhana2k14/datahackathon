shiny::runApp('D:/IoT/KeyTelematics/example')
runApp('D:/IoT/KeyTelematics/Clusters')
deployApp('D:\\IoT\\KeyTelematics\\Clusters')
library(shinyapps)
deployApp('D:\\IoT\\KeyTelematics\\Clusters')
install.packages('FSelector')
library(FSelector)
library(data.table)
library(matrix)
install.packages('matrix')
install.packages('Matrix')
library(matrix)
library(Matrix)
library(xgboost)
install.packages('xgboosty')
install.packages('xgboost')
library(xgboost)
library(DT)
setwd('D:\\Kaggle\\All State')
cat(system('ls -sh ../train.csv', intern = TRUE), '\n', sep = '')
system('ls -sh ../train.csv', intern = TRUE)
train <- fread('train.csv', sep = ',', header = TRUE, showProgress = TRUE, stringsAsFactors = FALSE)
test <- fread('test.csv', sep = ',', header = TRUE, showProgress = TRUE, stringsAsFactors = FALSE)
head(train)
rm(train)
rm(test)
setwd('D:\Kaggle\Bosch Product line Performance')
setwd('D:\\Kaggle\\Bosch Product line Performance')
train_nu <- fread('train_numeric.csv', sep = ',', header = TRUE, showProgress = TRUE, stringsAsFactors = FALSE)
train_cat <- fread('train_categorical.csv', sep = ',', header = TRUE, showProgress = TRUE, stringsAsFactors = FALSE)
setwd('D:\\Kaggle\\All State')
train <- fread('train.csv', sep = ',', header = TRUE, showProgress = TRUE, stringsAsFactors = FALSE)
head(train)
f <- data(iris)
head(f)
head(iris)
f <- iris[,order(colnames(iris))]
head(f)
install.packages('dplyr')
if(! ('dplyr' %in% rownames(installed.packages()))
{ install.packages('dplyr'
, type = 'source'
, repos = (c('https://cran.rstudio.com/bin/windows/contrib/3.2/dplyr_0.5.0.zip')))
})
if(!('dplyr' %in% rownames(installed.packages())))
{ install.packages('dplyr'
, type = 'source'
, repos = (c('https://cran.rstudio.com/bin/windows/contrib/3.2/dplyr_0.5.0.zip')))
}
